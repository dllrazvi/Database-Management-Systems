<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="BlockchainDataSet" targetNamespace="http://tempuri.org/BlockchainDataSet.xsd" xmlns:mstns="http://tempuri.org/BlockchainDataSet.xsd" xmlns="http://tempuri.org/BlockchainDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="BlockchainConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="BlockchainConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DBMSlab21.Properties.Settings.GlobalReference.Default.BlockchainConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountsTableAdapter" GeneratorDataComponentClassName="AccountsTableAdapter" Name="Accounts" UserDataComponentName="AccountsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.Accounts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Accounts] WHERE (([AccountID] = @Original_AccountID) AND ([AccountAddress] = @Original_AccountAddress) AND ((@IsNull_Balance = 1 AND [Balance] IS NULL) OR ([Balance] = @Original_Balance)) AND ((@IsNull_TestColumn = 1 AND [TestColumn] IS NULL) OR ([TestColumn] = @Original_TestColumn)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccountAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Balance" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Balance" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Balance" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Balance" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestColumn" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestColumn" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestColumn" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestColumn" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Accounts] ([AccountAddress], [Balance], [PublicKey], [PrivateKey], [TransactionHistory], [TestColumn]) VALUES (@AccountAddress, @Balance, @PublicKey, @PrivateKey, @TransactionHistory, @TestColumn);
SELECT AccountID, AccountAddress, Balance, PublicKey, PrivateKey, TransactionHistory, TestColumn FROM Accounts WHERE (AccountID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccountAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Balance" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Balance" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PublicKey" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PublicKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PrivateKey" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PrivateKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TransactionHistory" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TransactionHistory" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TestColumn" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestColumn" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccountID, AccountAddress, Balance, PublicKey, PrivateKey, TransactionHistory, TestColumn FROM dbo.Accounts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Accounts] SET [AccountAddress] = @AccountAddress, [Balance] = @Balance, [PublicKey] = @PublicKey, [PrivateKey] = @PrivateKey, [TransactionHistory] = @TransactionHistory, [TestColumn] = @TestColumn WHERE (([AccountID] = @Original_AccountID) AND ([AccountAddress] = @Original_AccountAddress) AND ((@IsNull_Balance = 1 AND [Balance] IS NULL) OR ([Balance] = @Original_Balance)) AND ((@IsNull_TestColumn = 1 AND [TestColumn] IS NULL) OR ([TestColumn] = @Original_TestColumn)));
SELECT AccountID, AccountAddress, Balance, PublicKey, PrivateKey, TransactionHistory, TestColumn FROM Accounts WHERE (AccountID = @AccountID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@AccountAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Balance" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Balance" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PublicKey" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PublicKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PrivateKey" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PrivateKey" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TransactionHistory" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TransactionHistory" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TestColumn" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestColumn" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_AccountAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="AccountAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Balance" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Balance" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Double" Direction="Input" ParameterName="@Original_Balance" Precision="0" ProviderType="Float" Scale="0" Size="0" SourceColumn="Balance" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_TestColumn" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestColumn" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TestColumn" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TestColumn" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="AccountID" ColumnName="AccountID" DataSourceName="Blockchain.dbo.Accounts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@AccountID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountID" DataSetColumn="AccountID" />
              <Mapping SourceColumn="AccountAddress" DataSetColumn="AccountAddress" />
              <Mapping SourceColumn="Balance" DataSetColumn="Balance" />
              <Mapping SourceColumn="PublicKey" DataSetColumn="PublicKey" />
              <Mapping SourceColumn="PrivateKey" DataSetColumn="PrivateKey" />
              <Mapping SourceColumn="TransactionHistory" DataSetColumn="TransactionHistory" />
              <Mapping SourceColumn="TestColumn" DataSetColumn="TestColumn" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="AccountSmartContractTableAdapter" GeneratorDataComponentClassName="AccountSmartContractTableAdapter" Name="AccountSmartContract" UserDataComponentName="AccountSmartContractTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.AccountSmartContract" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[AccountSmartContract] WHERE (([AccountID] = @Original_AccountID) AND ([ContractID] = @Original_ContractID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContractID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[AccountSmartContract] ([AccountID], [ContractID]) VALUES (@AccountID, @ContractID);
SELECT AccountID, ContractID FROM AccountSmartContract WHERE (AccountID = @AccountID) AND (ContractID = @ContractID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ContractID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT AccountID, ContractID FROM dbo.AccountSmartContract</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[AccountSmartContract] SET [AccountID] = @AccountID, [ContractID] = @ContractID WHERE (([AccountID] = @Original_AccountID) AND ([ContractID] = @Original_ContractID));
SELECT AccountID, ContractID FROM AccountSmartContract WHERE (AccountID = @AccountID) AND (ContractID = @ContractID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ContractID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContractID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="AccountID" DataSetColumn="AccountID" />
              <Mapping SourceColumn="ContractID" DataSetColumn="ContractID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Assignment3wTableAdapter" GeneratorDataComponentClassName="Assignment3wTableAdapter" Name="Assignment3w" UserDataComponentName="Assignment3wTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.Assignment3w" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Assignment3w] ([Prime]) VALUES (@Prime)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Prime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Prime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Prime FROM dbo.Assignment3w</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Prime" DataSetColumn="Prime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BlockchainMetadataTableAdapter" GeneratorDataComponentClassName="BlockchainMetadataTableAdapter" Name="BlockchainMetadata" UserDataComponentName="BlockchainMetadataTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.BlockchainMetadata" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[BlockchainMetadata] WHERE (([MetadataID] = @Original_MetadataID) AND ([BlockchainName] = @Original_BlockchainName) AND ([NetworkID] = @Original_NetworkID) AND ([ConsensusAlgorithm] = @Original_ConsensusAlgorithm) AND ([BlockTime] = @Original_BlockTime))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MetadataID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MetadataID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BlockchainName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BlockchainName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_NetworkID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NetworkID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ConsensusAlgorithm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ConsensusAlgorithm" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[BlockchainMetadata] ([BlockchainName], [NetworkID], [GenesisBlockInfo], [ConsensusAlgorithm], [BlockTime]) VALUES (@BlockchainName, @NetworkID, @GenesisBlockInfo, @ConsensusAlgorithm, @BlockTime);
SELECT MetadataID, BlockchainName, NetworkID, GenesisBlockInfo, ConsensusAlgorithm, BlockTime FROM BlockchainMetadata WHERE (MetadataID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BlockchainName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BlockchainName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@NetworkID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NetworkID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@GenesisBlockInfo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GenesisBlockInfo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ConsensusAlgorithm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ConsensusAlgorithm" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MetadataID, BlockchainName, NetworkID, GenesisBlockInfo, ConsensusAlgorithm, BlockTime FROM dbo.BlockchainMetadata</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[BlockchainMetadata] SET [BlockchainName] = @BlockchainName, [NetworkID] = @NetworkID, [GenesisBlockInfo] = @GenesisBlockInfo, [ConsensusAlgorithm] = @ConsensusAlgorithm, [BlockTime] = @BlockTime WHERE (([MetadataID] = @Original_MetadataID) AND ([BlockchainName] = @Original_BlockchainName) AND ([NetworkID] = @Original_NetworkID) AND ([ConsensusAlgorithm] = @Original_ConsensusAlgorithm) AND ([BlockTime] = @Original_BlockTime));
SELECT MetadataID, BlockchainName, NetworkID, GenesisBlockInfo, ConsensusAlgorithm, BlockTime FROM BlockchainMetadata WHERE (MetadataID = @MetadataID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@BlockchainName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BlockchainName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@NetworkID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NetworkID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@GenesisBlockInfo" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="GenesisBlockInfo" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ConsensusAlgorithm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ConsensusAlgorithm" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockTime" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MetadataID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MetadataID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_BlockchainName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="BlockchainName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_NetworkID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="NetworkID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ConsensusAlgorithm" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ConsensusAlgorithm" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockTime" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockTime" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MetadataID" ColumnName="MetadataID" DataSourceName="Blockchain.dbo.BlockchainMetadata" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MetadataID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MetadataID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MetadataID" DataSetColumn="MetadataID" />
              <Mapping SourceColumn="BlockchainName" DataSetColumn="BlockchainName" />
              <Mapping SourceColumn="NetworkID" DataSetColumn="NetworkID" />
              <Mapping SourceColumn="GenesisBlockInfo" DataSetColumn="GenesisBlockInfo" />
              <Mapping SourceColumn="ConsensusAlgorithm" DataSetColumn="ConsensusAlgorithm" />
              <Mapping SourceColumn="BlockTime" DataSetColumn="BlockTime" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="BlocksTableAdapter" GeneratorDataComponentClassName="BlocksTableAdapter" Name="Blocks" UserDataComponentName="BlocksTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.Blocks" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Blocks] WHERE (([BlockID] = @Original_BlockID) AND ([Timestamp] = @Original_Timestamp) AND ([PreviousBlockHash] = @Original_PreviousBlockHash) AND ([MerkleRoot] = @Original_MerkleRoot) AND ([Nonce] = @Original_Nonce))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Timestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PreviousBlockHash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PreviousBlockHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MerkleRoot" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MerkleRoot" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Nonce" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Nonce" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Blocks] ([Timestamp], [PreviousBlockHash], [MerkleRoot], [Nonce]) VALUES (@Timestamp, @PreviousBlockHash, @MerkleRoot, @Nonce);
SELECT BlockID, Timestamp, PreviousBlockHash, MerkleRoot, Nonce FROM Blocks WHERE (BlockID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Timestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PreviousBlockHash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PreviousBlockHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MerkleRoot" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MerkleRoot" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Nonce" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Nonce" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT BlockID, Timestamp, PreviousBlockHash, MerkleRoot, Nonce FROM dbo.Blocks</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Blocks] SET [Timestamp] = @Timestamp, [PreviousBlockHash] = @PreviousBlockHash, [MerkleRoot] = @MerkleRoot, [Nonce] = @Nonce WHERE (([BlockID] = @Original_BlockID) AND ([Timestamp] = @Original_Timestamp) AND ([PreviousBlockHash] = @Original_PreviousBlockHash) AND ([MerkleRoot] = @Original_MerkleRoot) AND ([Nonce] = @Original_Nonce));
SELECT BlockID, Timestamp, PreviousBlockHash, MerkleRoot, Nonce FROM Blocks WHERE (BlockID = @BlockID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Timestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Timestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PreviousBlockHash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PreviousBlockHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MerkleRoot" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MerkleRoot" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Nonce" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Nonce" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_Timestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="Timestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_PreviousBlockHash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PreviousBlockHash" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MerkleRoot" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MerkleRoot" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Nonce" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Nonce" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="BlockID" ColumnName="BlockID" DataSourceName="Blockchain.dbo.Blocks" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@BlockID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="BlockID" DataSetColumn="BlockID" />
              <Mapping SourceColumn="Timestamp" DataSetColumn="Timestamp" />
              <Mapping SourceColumn="PreviousBlockHash" DataSetColumn="PreviousBlockHash" />
              <Mapping SourceColumn="MerkleRoot" DataSetColumn="MerkleRoot" />
              <Mapping SourceColumn="Nonce" DataSetColumn="Nonce" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ContractExecutionsTableAdapter" GeneratorDataComponentClassName="ContractExecutionsTableAdapter" Name="ContractExecutions" UserDataComponentName="ContractExecutionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.ContractExecutions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ContractExecutions] WHERE (([ContractExecutionID] = @Original_ContractExecutionID) AND ([ContractID] = @Original_ContractID) AND ([ExecutionTimestamp] = @Original_ExecutionTimestamp))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContractExecutionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractExecutionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContractID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_ExecutionTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ExecutionTimestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ContractExecutions] ([ContractID], [ExecutionTimestamp]) VALUES (@ContractID, @ExecutionTimestamp);
SELECT ContractExecutionID, ContractID, ExecutionTimestamp FROM ContractExecutions WHERE (ContractExecutionID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ContractID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ExecutionTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ExecutionTimestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ContractExecutionID, ContractID, ExecutionTimestamp FROM dbo.ContractExecutions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ContractExecutions] SET [ContractID] = @ContractID, [ExecutionTimestamp] = @ExecutionTimestamp WHERE (([ContractExecutionID] = @Original_ContractExecutionID) AND ([ContractID] = @Original_ContractID) AND ([ExecutionTimestamp] = @Original_ExecutionTimestamp));
SELECT ContractExecutionID, ContractID, ExecutionTimestamp FROM ContractExecutions WHERE (ContractExecutionID = @ContractExecutionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ContractID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ExecutionTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ExecutionTimestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContractExecutionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractExecutionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContractID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_ExecutionTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ExecutionTimestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ContractExecutionID" ColumnName="ContractExecutionID" DataSourceName="Blockchain.dbo.ContractExecutions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ContractExecutionID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ContractExecutionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ContractExecutionID" DataSetColumn="ContractExecutionID" />
              <Mapping SourceColumn="ContractID" DataSetColumn="ContractID" />
              <Mapping SourceColumn="ExecutionTimestamp" DataSetColumn="ExecutionTimestamp" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CurrentVersionTableAdapter" GeneratorDataComponentClassName="CurrentVersionTableAdapter" Name="CurrentVersion" UserDataComponentName="CurrentVersionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.CurrentVersion" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CurrentVersion] ([currentVersion]) VALUES (@currentVersion)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@currentVersion" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="currentVersion" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT currentVersion FROM dbo.CurrentVersion</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="currentVersion" DataSetColumn="currentVersion" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="DatabaseVersionTableAdapter" GeneratorDataComponentClassName="DatabaseVersionTableAdapter" Name="DatabaseVersion" UserDataComponentName="DatabaseVersionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.DatabaseVersion" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[DatabaseVersion] WHERE (([VersionID] = @Original_VersionID) AND ((@IsNull_VersionNumber = 1 AND [VersionNumber] IS NULL) OR ([VersionNumber] = @Original_VersionNumber)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VersionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_VersionNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionNumber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VersionNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[DatabaseVersion] ([VersionID], [VersionNumber]) VALUES (@VersionID, @VersionNumber);
SELECT VersionID, VersionNumber FROM DatabaseVersion WHERE (VersionID = @VersionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VersionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VersionNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT VersionID, VersionNumber FROM dbo.DatabaseVersion</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[DatabaseVersion] SET [VersionID] = @VersionID, [VersionNumber] = @VersionNumber WHERE (([VersionID] = @Original_VersionID) AND ((@IsNull_VersionNumber = 1 AND [VersionNumber] IS NULL) OR ([VersionNumber] = @Original_VersionNumber)));
SELECT VersionID, VersionNumber FROM DatabaseVersion WHERE (VersionID = @VersionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VersionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VersionNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VersionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_VersionNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionNumber" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VersionNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="VersionID" DataSetColumn="VersionID" />
              <Mapping SourceColumn="VersionNumber" DataSetColumn="VersionNumber" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExampleTable1TableAdapter" GeneratorDataComponentClassName="ExampleTable1TableAdapter" Name="ExampleTable1" UserDataComponentName="ExampleTable1TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.ExampleTable1" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ExampleTable1] WHERE (([ID] = @Original_ID) AND ([Name] = @Original_Name))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ExampleTable1] ([Name], [Description]) VALUES (@Name, @Description);
SELECT ID, Name, Description FROM ExampleTable1 WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Name, Description FROM dbo.ExampleTable1</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ExampleTable1] SET [Name] = @Name, [Description] = @Description WHERE (([ID] = @Original_ID) AND ([Name] = @Original_Name));
SELECT ID, Name, Description FROM ExampleTable1 WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Name" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="Blockchain.dbo.ExampleTable1" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Name" DataSetColumn="Name" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExampleTable2TableAdapter" GeneratorDataComponentClassName="ExampleTable2TableAdapter" Name="ExampleTable2" UserDataComponentName="ExampleTable2TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.ExampleTable2" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ExampleTable2] WHERE (([ID] = @Original_ID) AND ([Code] = @Original_Code) AND ((@IsNull_Value = 1 AND [Value] IS NULL) OR ([Value] = @Original_Value)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ExampleTable2] ([Code], [Value]) VALUES (@Code, @Value);
SELECT ID, Code, Value FROM ExampleTable2 WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Code, Value FROM dbo.ExampleTable2</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ExampleTable2] SET [Code] = @Code, [Value] = @Value WHERE (([ID] = @Original_ID) AND ([Code] = @Original_Code) AND ((@IsNull_Value = 1 AND [Value] IS NULL) OR ([Value] = @Original_Value)));
SELECT ID, Code, Value FROM ExampleTable2 WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Code" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Code" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Value" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Value" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="Blockchain.dbo.ExampleTable2" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Code" DataSetColumn="Code" />
              <Mapping SourceColumn="Value" DataSetColumn="Value" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExampleTable4TableAdapter" GeneratorDataComponentClassName="ExampleTable4TableAdapter" Name="ExampleTable4" UserDataComponentName="ExampleTable4TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.ExampleTable4" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ExampleTable4] WHERE (([ID] = @Original_ID) AND ([Category] = @Original_Category) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_Price)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ExampleTable4] ([Category], [Price]) VALUES (@Category, @Price);
SELECT ID, Category, Price FROM ExampleTable4 WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, Category, Price FROM dbo.ExampleTable4</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ExampleTable4] SET [Category] = @Category, [Price] = @Price WHERE (([ID] = @Original_ID) AND ([Category] = @Original_Category) AND ((@IsNull_Price = 1 AND [Price] IS NULL) OR ([Price] = @Original_Price)));
SELECT ID, Category, Price FROM ExampleTable4 WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Category" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Category" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Price" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Price" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Price" Precision="10" ProviderType="Decimal" Scale="2" Size="0" SourceColumn="Price" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="Blockchain.dbo.ExampleTable4" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="Category" DataSetColumn="Category" />
              <Mapping SourceColumn="Price" DataSetColumn="Price" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="ExampleTable7TableAdapter" GeneratorDataComponentClassName="ExampleTable7TableAdapter" Name="ExampleTable7" UserDataComponentName="ExampleTable7TableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.ExampleTable7" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[ExampleTable7] WHERE (([ID] = @Original_ID) AND ([ProductName] = @Original_ProductName) AND ((@IsNull_Quantity = 1 AND [Quantity] IS NULL) OR ([Quantity] = @Original_Quantity)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProductName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProductName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[ExampleTable7] ([ProductName], [Quantity]) VALUES (@ProductName, @Quantity);
SELECT ID, ProductName, Quantity FROM ExampleTable7 WHERE (ID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProductName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProductName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ID, ProductName, Quantity FROM dbo.ExampleTable7</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[ExampleTable7] SET [ProductName] = @ProductName, [Quantity] = @Quantity WHERE (([ID] = @Original_ID) AND ([ProductName] = @Original_ProductName) AND ((@IsNull_Quantity = 1 AND [Quantity] IS NULL) OR ([Quantity] = @Original_Quantity)));
SELECT ID, ProductName, Quantity FROM ExampleTable7 WHERE (ID = @ID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ProductName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProductName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ProductName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ProductName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_Quantity" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Quantity" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ID" ColumnName="ID" DataSourceName="Blockchain.dbo.ExampleTable7" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ID" DataSetColumn="ID" />
              <Mapping SourceColumn="ProductName" DataSetColumn="ProductName" />
              <Mapping SourceColumn="Quantity" DataSetColumn="Quantity" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="MinersTableAdapter" GeneratorDataComponentClassName="MinersTableAdapter" Name="Miners" UserDataComponentName="MinersTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.Miners" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Miners] WHERE (([MinerID] = @Original_MinerID) AND ([BlockID] = @Original_BlockID) AND ([RewardAmount] = @Original_RewardAmount) AND ([MinerAddress] = @Original_MinerAddress))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MinerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MinerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_RewardAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="RewardAmount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MinerAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MinerAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Miners] ([BlockID], [RewardAmount], [MinerAddress]) VALUES (@BlockID, @RewardAmount, @MinerAddress);
SELECT MinerID, BlockID, RewardAmount, MinerAddress FROM Miners WHERE (MinerID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@RewardAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="RewardAmount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MinerAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MinerAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT MinerID, BlockID, RewardAmount, MinerAddress FROM dbo.Miners</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Miners] SET [BlockID] = @BlockID, [RewardAmount] = @RewardAmount, [MinerAddress] = @MinerAddress WHERE (([MinerID] = @Original_MinerID) AND ([BlockID] = @Original_BlockID) AND ([RewardAmount] = @Original_RewardAmount) AND ([MinerAddress] = @Original_MinerAddress));
SELECT MinerID, BlockID, RewardAmount, MinerAddress FROM Miners WHERE (MinerID = @MinerID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@RewardAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="RewardAmount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@MinerAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MinerAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_MinerID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="MinerID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_RewardAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="RewardAmount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_MinerAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="MinerAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="MinerID" ColumnName="MinerID" DataSourceName="Blockchain.dbo.Miners" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@MinerID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="MinerID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="MinerID" DataSetColumn="MinerID" />
              <Mapping SourceColumn="BlockID" DataSetColumn="BlockID" />
              <Mapping SourceColumn="RewardAmount" DataSetColumn="RewardAmount" />
              <Mapping SourceColumn="MinerAddress" DataSetColumn="MinerAddress" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SchemaVersionTableAdapter" GeneratorDataComponentClassName="SchemaVersionTableAdapter" Name="SchemaVersion" UserDataComponentName="SchemaVersionTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.SchemaVersion" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SchemaVersion] WHERE (([VersionNumber] = @Original_VersionNumber) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VersionNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SchemaVersion] ([VersionNumber], [Description]) VALUES (@VersionNumber, @Description);
SELECT VersionNumber, Description FROM SchemaVersion WHERE (VersionNumber = @VersionNumber)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VersionNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT VersionNumber, Description FROM dbo.SchemaVersion</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SchemaVersion] SET [VersionNumber] = @VersionNumber, [Description] = @Description WHERE (([VersionNumber] = @Original_VersionNumber) AND ((@IsNull_Description = 1 AND [Description] IS NULL) OR ([Description] = @Original_Description)));
SELECT VersionNumber, Description FROM SchemaVersion WHERE (VersionNumber = @VersionNumber)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@VersionNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionNumber" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_VersionNumber" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="VersionNumber" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_Description" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_Description" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="VersionNumber" DataSetColumn="VersionNumber" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SecurityAccessTableAdapter" GeneratorDataComponentClassName="SecurityAccessTableAdapter" Name="SecurityAccess" UserDataComponentName="SecurityAccessTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.SecurityAccess" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SecurityAccess] WHERE (([UserID] = @Original_UserID) AND ([UserName] = @Original_UserName) AND ([UserRole] = @Original_UserRole))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserRole" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserRole" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SecurityAccess] ([UserName], [PasswordHash], [UserRole]) VALUES (@UserName, @PasswordHash, @UserRole);
SELECT UserID, UserName, PasswordHash, UserRole FROM SecurityAccess WHERE (UserID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PasswordHash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserRole" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserRole" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserID, UserName, PasswordHash, UserRole FROM dbo.SecurityAccess</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SecurityAccess] SET [UserName] = @UserName, [PasswordHash] = @PasswordHash, [UserRole] = @UserRole WHERE (([UserID] = @Original_UserID) AND ([UserName] = @Original_UserName) AND ([UserRole] = @Original_UserRole));
SELECT UserID, UserName, PasswordHash, UserRole FROM SecurityAccess WHERE (UserID = @UserID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@PasswordHash" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="PasswordHash" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@UserRole" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserRole" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_UserRole" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="UserRole" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserID" ColumnName="UserID" DataSourceName="Blockchain.dbo.SecurityAccess" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="UserID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserID" DataSetColumn="UserID" />
              <Mapping SourceColumn="UserName" DataSetColumn="UserName" />
              <Mapping SourceColumn="PasswordHash" DataSetColumn="PasswordHash" />
              <Mapping SourceColumn="UserRole" DataSetColumn="UserRole" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="SmartContractsTableAdapter" GeneratorDataComponentClassName="SmartContractsTableAdapter" Name="SmartContracts" UserDataComponentName="SmartContractsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.SmartContracts" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[SmartContracts] WHERE (([ContractID] = @Original_ContractID) AND ([ContractAddress] = @Original_ContractAddress) AND ([ContractCreator] = @Original_ContractCreator) AND ([ContractCreationDate] = @Original_ContractCreationDate))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContractID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ContractAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ContractAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ContractCreator" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ContractCreator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_ContractCreationDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ContractCreationDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[SmartContracts] ([ContractAddress], [ContractCode], [ContractCreator], [ContractCreationDate]) VALUES (@ContractAddress, @ContractCode, @ContractCreator, @ContractCreationDate);
SELECT ContractID, ContractAddress, ContractCode, ContractCreator, ContractCreationDate FROM SmartContracts WHERE (ContractID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ContractAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ContractAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ContractCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ContractCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ContractCreator" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ContractCreator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ContractCreationDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ContractCreationDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT ContractID, ContractAddress, ContractCode, ContractCreator, ContractCreationDate FROM dbo.SmartContracts</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[SmartContracts] SET [ContractAddress] = @ContractAddress, [ContractCode] = @ContractCode, [ContractCreator] = @ContractCreator, [ContractCreationDate] = @ContractCreationDate WHERE (([ContractID] = @Original_ContractID) AND ([ContractAddress] = @Original_ContractAddress) AND ([ContractCreator] = @Original_ContractCreator) AND ([ContractCreationDate] = @Original_ContractCreationDate));
SELECT ContractID, ContractAddress, ContractCode, ContractCreator, ContractCreationDate FROM SmartContracts WHERE (ContractID = @ContractID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ContractAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ContractAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ContractCode" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ContractCode" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ContractCreator" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ContractCreator" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@ContractCreationDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ContractCreationDate" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ContractID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ContractAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ContractAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ContractCreator" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ContractCreator" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_ContractCreationDate" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="ContractCreationDate" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="ContractID" ColumnName="ContractID" DataSourceName="Blockchain.dbo.SmartContracts" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@ContractID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="ContractID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="ContractID" DataSetColumn="ContractID" />
              <Mapping SourceColumn="ContractAddress" DataSetColumn="ContractAddress" />
              <Mapping SourceColumn="ContractCode" DataSetColumn="ContractCode" />
              <Mapping SourceColumn="ContractCreator" DataSetColumn="ContractCreator" />
              <Mapping SourceColumn="ContractCreationDate" DataSetColumn="ContractCreationDate" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TokensTableAdapter" GeneratorDataComponentClassName="TokensTableAdapter" Name="Tokens" UserDataComponentName="TokensTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.Tokens" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Tokens] WHERE (([TokenID] = @Original_TokenID) AND ([TokenName] = @Original_TokenName) AND ([TokenSymbol] = @Original_TokenSymbol) AND ([TotalSupply] = @Original_TotalSupply))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TokenID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TokenID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TokenName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TokenName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TokenSymbol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TokenSymbol" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_TotalSupply" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="TotalSupply" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Tokens] ([TokenName], [TokenSymbol], [TotalSupply]) VALUES (@TokenName, @TokenSymbol, @TotalSupply);
SELECT TokenID, TokenName, TokenSymbol, TotalSupply FROM Tokens WHERE (TokenID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TokenName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TokenName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TokenSymbol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TokenSymbol" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@TotalSupply" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="TotalSupply" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TokenID, TokenName, TokenSymbol, TotalSupply FROM dbo.Tokens</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Tokens] SET [TokenName] = @TokenName, [TokenSymbol] = @TokenSymbol, [TotalSupply] = @TotalSupply WHERE (([TokenID] = @Original_TokenID) AND ([TokenName] = @Original_TokenName) AND ([TokenSymbol] = @Original_TokenSymbol) AND ([TotalSupply] = @Original_TotalSupply));
SELECT TokenID, TokenName, TokenSymbol, TotalSupply FROM Tokens WHERE (TokenID = @TokenID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TokenName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TokenName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@TokenSymbol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TokenSymbol" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@TotalSupply" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="TotalSupply" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TokenID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TokenID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TokenName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TokenName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_TokenSymbol" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="TokenSymbol" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_TotalSupply" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="TotalSupply" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TokenID" ColumnName="TokenID" DataSourceName="Blockchain.dbo.Tokens" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TokenID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TokenID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TokenID" DataSetColumn="TokenID" />
              <Mapping SourceColumn="TokenName" DataSetColumn="TokenName" />
              <Mapping SourceColumn="TokenSymbol" DataSetColumn="TokenSymbol" />
              <Mapping SourceColumn="TotalSupply" DataSetColumn="TotalSupply" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TransactionInputsTableAdapter" GeneratorDataComponentClassName="TransactionInputsTableAdapter" Name="TransactionInputs" UserDataComponentName="TransactionInputsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.TransactionInputs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TransactionInputs] WHERE (([InputID] = @Original_InputID) AND ([TransactionID] = @Original_TransactionID) AND ([OutputTransactionID] = @Original_OutputTransactionID) AND ([InputAmount] = @Original_InputAmount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InputID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InputID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OutputTransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputTransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_InputAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="InputAmount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TransactionInputs] ([TransactionID], [OutputTransactionID], [InputAmount]) VALUES (@TransactionID, @OutputTransactionID, @InputAmount);
SELECT InputID, TransactionID, OutputTransactionID, InputAmount FROM TransactionInputs WHERE (InputID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@OutputTransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputTransactionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@InputAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="InputAmount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT InputID, TransactionID, OutputTransactionID, InputAmount FROM dbo.TransactionInputs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TransactionInputs] SET [TransactionID] = @TransactionID, [OutputTransactionID] = @OutputTransactionID, [InputAmount] = @InputAmount WHERE (([InputID] = @Original_InputID) AND ([TransactionID] = @Original_TransactionID) AND ([OutputTransactionID] = @Original_OutputTransactionID) AND ([InputAmount] = @Original_InputAmount));
SELECT InputID, TransactionID, OutputTransactionID, InputAmount FROM TransactionInputs WHERE (InputID = @InputID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@OutputTransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputTransactionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@InputAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="InputAmount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_InputID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="InputID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OutputTransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputTransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_InputAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="InputAmount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="InputID" ColumnName="InputID" DataSourceName="Blockchain.dbo.TransactionInputs" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@InputID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="InputID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="InputID" DataSetColumn="InputID" />
              <Mapping SourceColumn="TransactionID" DataSetColumn="TransactionID" />
              <Mapping SourceColumn="OutputTransactionID" DataSetColumn="OutputTransactionID" />
              <Mapping SourceColumn="InputAmount" DataSetColumn="InputAmount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TransactionOutputsTableAdapter" GeneratorDataComponentClassName="TransactionOutputsTableAdapter" Name="TransactionOutputs" UserDataComponentName="TransactionOutputsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.TransactionOutputs" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[TransactionOutputs] WHERE (([OutputID] = @Original_OutputID) AND ([TransactionID] = @Original_TransactionID) AND ([ReceiverAccountID] = @Original_ReceiverAccountID) AND ([OutputAmount] = @Original_OutputAmount))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OutputID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReceiverAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceiverAccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_OutputAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="OutputAmount" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[TransactionOutputs] ([TransactionID], [ReceiverAccountID], [OutputAmount]) VALUES (@TransactionID, @ReceiverAccountID, @OutputAmount);
SELECT OutputID, TransactionID, ReceiverAccountID, OutputAmount FROM TransactionOutputs WHERE (OutputID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ReceiverAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceiverAccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@OutputAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="OutputAmount" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT OutputID, TransactionID, ReceiverAccountID, OutputAmount FROM dbo.TransactionOutputs</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[TransactionOutputs] SET [TransactionID] = @TransactionID, [ReceiverAccountID] = @ReceiverAccountID, [OutputAmount] = @OutputAmount WHERE (([OutputID] = @Original_OutputID) AND ([TransactionID] = @Original_TransactionID) AND ([ReceiverAccountID] = @Original_ReceiverAccountID) AND ([OutputAmount] = @Original_OutputAmount));
SELECT OutputID, TransactionID, ReceiverAccountID, OutputAmount FROM TransactionOutputs WHERE (OutputID = @OutputID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@ReceiverAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceiverAccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@OutputAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="OutputAmount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_OutputID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="OutputID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_ReceiverAccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="ReceiverAccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_OutputAmount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="OutputAmount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="OutputID" ColumnName="OutputID" DataSourceName="Blockchain.dbo.TransactionOutputs" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@OutputID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="OutputID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="OutputID" DataSetColumn="OutputID" />
              <Mapping SourceColumn="TransactionID" DataSetColumn="TransactionID" />
              <Mapping SourceColumn="ReceiverAccountID" DataSetColumn="ReceiverAccountID" />
              <Mapping SourceColumn="OutputAmount" DataSetColumn="OutputAmount" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="TransactionsTableAdapter" GeneratorDataComponentClassName="TransactionsTableAdapter" Name="Transactions" UserDataComponentName="TransactionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.Transactions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Transactions] WHERE (([TransactionID] = @Original_TransactionID) AND ([BlockID] = @Original_BlockID) AND ([SenderAddress] = @Original_SenderAddress) AND ([ReceiverAddress] = @Original_ReceiverAddress) AND ([Amount] = @Original_Amount) AND ([TransactionTimestamp] = @Original_TransactionTimestamp))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SenderAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SenderAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ReceiverAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ReceiverAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Amount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_TransactionTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="TransactionTimestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Transactions] ([BlockID], [SenderAddress], [ReceiverAddress], [Amount], [TransactionTimestamp]) VALUES (@BlockID, @SenderAddress, @ReceiverAddress, @Amount, @TransactionTimestamp);
SELECT TransactionID, BlockID, SenderAddress, ReceiverAddress, Amount, TransactionTimestamp FROM Transactions WHERE (TransactionID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SenderAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SenderAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ReceiverAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ReceiverAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Amount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@TransactionTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="TransactionTimestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT TransactionID, BlockID, SenderAddress, ReceiverAddress, Amount, TransactionTimestamp FROM dbo.Transactions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Transactions] SET [BlockID] = @BlockID, [SenderAddress] = @SenderAddress, [ReceiverAddress] = @ReceiverAddress, [Amount] = @Amount, [TransactionTimestamp] = @TransactionTimestamp WHERE (([TransactionID] = @Original_TransactionID) AND ([BlockID] = @Original_BlockID) AND ([SenderAddress] = @Original_SenderAddress) AND ([ReceiverAddress] = @Original_ReceiverAddress) AND ([Amount] = @Original_Amount) AND ([TransactionTimestamp] = @Original_TransactionTimestamp));
SELECT TransactionID, BlockID, SenderAddress, ReceiverAddress, Amount, TransactionTimestamp FROM Transactions WHERE (TransactionID = @TransactionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@BlockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@SenderAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SenderAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@ReceiverAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ReceiverAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Amount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@TransactionTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="TransactionTimestamp" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_BlockID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="BlockID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_SenderAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="SenderAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_ReceiverAddress" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="ReceiverAddress" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Decimal" Direction="Input" ParameterName="@Original_Amount" Precision="18" ProviderType="Decimal" Scale="8" Size="0" SourceColumn="Amount" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="DateTime" Direction="Input" ParameterName="@Original_TransactionTimestamp" Precision="0" ProviderType="DateTime" Scale="0" Size="0" SourceColumn="TransactionTimestamp" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="TransactionID" ColumnName="TransactionID" DataSourceName="Blockchain.dbo.Transactions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="TransactionID" DataSetColumn="TransactionID" />
              <Mapping SourceColumn="BlockID" DataSetColumn="BlockID" />
              <Mapping SourceColumn="SenderAddress" DataSetColumn="SenderAddress" />
              <Mapping SourceColumn="ReceiverAddress" DataSetColumn="ReceiverAddress" />
              <Mapping SourceColumn="Amount" DataSetColumn="Amount" />
              <Mapping SourceColumn="TransactionTimestamp" DataSetColumn="TransactionTimestamp" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="UserTransactionsTableAdapter" GeneratorDataComponentClassName="UserTransactionsTableAdapter" Name="UserTransactions" UserDataComponentName="UserTransactionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.UserTransactions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[UserTransactions] WHERE (([UserTransactionID] = @Original_UserTransactionID) AND ([AccountID] = @Original_AccountID) AND ([TransactionID] = @Original_TransactionID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserTransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserTransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[UserTransactions] ([AccountID], [TransactionID]) VALUES (@AccountID, @TransactionID);
SELECT UserTransactionID, AccountID, TransactionID FROM UserTransactions WHERE (UserTransactionID = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT UserTransactionID, AccountID, TransactionID FROM dbo.UserTransactions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[UserTransactions] SET [AccountID] = @AccountID, [TransactionID] = @TransactionID WHERE (([UserTransactionID] = @Original_UserTransactionID) AND ([AccountID] = @Original_AccountID) AND ([TransactionID] = @Original_TransactionID));
SELECT UserTransactionID, AccountID, TransactionID FROM UserTransactions WHERE (UserTransactionID = @UserTransactionID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_UserTransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="UserTransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_AccountID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="AccountID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_TransactionID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="TransactionID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="UserTransactionID" ColumnName="UserTransactionID" DataSourceName="Blockchain.dbo.UserTransactions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@UserTransactionID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="UserTransactionID" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserTransactionID" DataSetColumn="UserTransactionID" />
              <Mapping SourceColumn="AccountID" DataSetColumn="AccountID" />
              <Mapping SourceColumn="TransactionID" DataSetColumn="TransactionID" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="VersionChangedTableAdapter" GeneratorDataComponentClassName="VersionChangedTableAdapter" Name="VersionChanged" UserDataComponentName="VersionChangedTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="BlockchainConnectionString (Settings)" DbObjectName="Blockchain.dbo.VersionChanged" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[VersionChanged] ([currentProcedure], [backwardsProcedure], [versionTO]) VALUES (@currentProcedure, @backwardsProcedure, @versionTO)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@currentProcedure" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="currentProcedure" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@backwardsProcedure" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="backwardsProcedure" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@versionTO" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="versionTO" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT currentProcedure, backwardsProcedure, versionTO FROM dbo.VersionChanged</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="currentProcedure" DataSetColumn="currentProcedure" />
              <Mapping SourceColumn="backwardsProcedure" DataSetColumn="backwardsProcedure" />
              <Mapping SourceColumn="versionTO" DataSetColumn="versionTO" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="BlockchainDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="BlockchainDataSet" msprop:Generator_DataSetName="BlockchainDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Accounts" msprop:Generator_RowEvHandlerName="AccountsRowChangeEventHandler" msprop:Generator_RowDeletedName="AccountsRowDeleted" msprop:Generator_RowDeletingName="AccountsRowDeleting" msprop:Generator_RowEvArgName="AccountsRowChangeEvent" msprop:Generator_TablePropName="Accounts" msprop:Generator_RowChangedName="AccountsRowChanged" msprop:Generator_RowChangingName="AccountsRowChanging" msprop:Generator_TableClassName="AccountsDataTable" msprop:Generator_RowClassName="AccountsRow" msprop:Generator_TableVarName="tableAccounts" msprop:Generator_UserTableName="Accounts">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="AccountID" msprop:Generator_ColumnPropNameInTable="AccountIDColumn" msprop:Generator_ColumnVarNameInTable="columnAccountID" msprop:Generator_UserColumnName="AccountID" type="xs:int" />
              <xs:element name="AccountAddress" msprop:Generator_ColumnPropNameInRow="AccountAddress" msprop:Generator_ColumnPropNameInTable="AccountAddressColumn" msprop:Generator_ColumnVarNameInTable="columnAccountAddress" msprop:Generator_UserColumnName="AccountAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Balance" msprop:Generator_ColumnPropNameInRow="Balance" msprop:Generator_ColumnPropNameInTable="BalanceColumn" msprop:Generator_ColumnVarNameInTable="columnBalance" msprop:Generator_UserColumnName="Balance" type="xs:double" minOccurs="0" />
              <xs:element name="PublicKey" msprop:Generator_ColumnPropNameInRow="PublicKey" msprop:Generator_ColumnPropNameInTable="PublicKeyColumn" msprop:Generator_ColumnVarNameInTable="columnPublicKey" msprop:Generator_UserColumnName="PublicKey" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PrivateKey" msprop:Generator_ColumnPropNameInRow="PrivateKey" msprop:Generator_ColumnPropNameInTable="PrivateKeyColumn" msprop:Generator_ColumnVarNameInTable="columnPrivateKey" msprop:Generator_UserColumnName="PrivateKey" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TransactionHistory" msprop:Generator_ColumnPropNameInRow="TransactionHistory" msprop:Generator_ColumnPropNameInTable="TransactionHistoryColumn" msprop:Generator_ColumnVarNameInTable="columnTransactionHistory" msprop:Generator_UserColumnName="TransactionHistory" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TestColumn" msprop:Generator_ColumnPropNameInRow="TestColumn" msprop:Generator_ColumnPropNameInTable="TestColumnColumn" msprop:Generator_ColumnVarNameInTable="columnTestColumn" msprop:Generator_UserColumnName="TestColumn" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="AccountSmartContract" msprop:Generator_RowEvHandlerName="AccountSmartContractRowChangeEventHandler" msprop:Generator_RowDeletedName="AccountSmartContractRowDeleted" msprop:Generator_RowDeletingName="AccountSmartContractRowDeleting" msprop:Generator_RowEvArgName="AccountSmartContractRowChangeEvent" msprop:Generator_TablePropName="AccountSmartContract" msprop:Generator_RowChangedName="AccountSmartContractRowChanged" msprop:Generator_RowChangingName="AccountSmartContractRowChanging" msprop:Generator_TableClassName="AccountSmartContractDataTable" msprop:Generator_RowClassName="AccountSmartContractRow" msprop:Generator_TableVarName="tableAccountSmartContract" msprop:Generator_UserTableName="AccountSmartContract">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="AccountID" msprop:Generator_ColumnPropNameInRow="AccountID" msprop:Generator_ColumnPropNameInTable="AccountIDColumn" msprop:Generator_ColumnVarNameInTable="columnAccountID" msprop:Generator_UserColumnName="AccountID" type="xs:int" />
              <xs:element name="ContractID" msprop:Generator_ColumnPropNameInRow="ContractID" msprop:Generator_ColumnPropNameInTable="ContractIDColumn" msprop:Generator_ColumnVarNameInTable="columnContractID" msprop:Generator_UserColumnName="ContractID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Assignment3w" msprop:Generator_RowEvHandlerName="Assignment3wRowChangeEventHandler" msprop:Generator_RowDeletedName="Assignment3wRowDeleted" msprop:Generator_RowDeletingName="Assignment3wRowDeleting" msprop:Generator_RowEvArgName="Assignment3wRowChangeEvent" msprop:Generator_TablePropName="Assignment3w" msprop:Generator_RowChangedName="Assignment3wRowChanged" msprop:Generator_RowChangingName="Assignment3wRowChanging" msprop:Generator_TableClassName="Assignment3wDataTable" msprop:Generator_RowClassName="Assignment3wRow" msprop:Generator_TableVarName="tableAssignment3w" msprop:Generator_UserTableName="Assignment3w">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Prime" msprop:Generator_ColumnPropNameInRow="Prime" msprop:Generator_ColumnPropNameInTable="PrimeColumn" msprop:Generator_ColumnVarNameInTable="columnPrime" msprop:Generator_UserColumnName="Prime" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="BlockchainMetadata" msprop:Generator_RowEvHandlerName="BlockchainMetadataRowChangeEventHandler" msprop:Generator_RowDeletedName="BlockchainMetadataRowDeleted" msprop:Generator_RowDeletingName="BlockchainMetadataRowDeleting" msprop:Generator_RowEvArgName="BlockchainMetadataRowChangeEvent" msprop:Generator_TablePropName="BlockchainMetadata" msprop:Generator_RowChangedName="BlockchainMetadataRowChanged" msprop:Generator_RowChangingName="BlockchainMetadataRowChanging" msprop:Generator_TableClassName="BlockchainMetadataDataTable" msprop:Generator_RowClassName="BlockchainMetadataRow" msprop:Generator_TableVarName="tableBlockchainMetadata" msprop:Generator_UserTableName="BlockchainMetadata">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MetadataID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="MetadataID" msprop:Generator_ColumnPropNameInTable="MetadataIDColumn" msprop:Generator_ColumnVarNameInTable="columnMetadataID" msprop:Generator_UserColumnName="MetadataID" type="xs:int" />
              <xs:element name="BlockchainName" msprop:Generator_ColumnPropNameInRow="BlockchainName" msprop:Generator_ColumnPropNameInTable="BlockchainNameColumn" msprop:Generator_ColumnVarNameInTable="columnBlockchainName" msprop:Generator_UserColumnName="BlockchainName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NetworkID" msprop:Generator_ColumnPropNameInRow="NetworkID" msprop:Generator_ColumnPropNameInTable="NetworkIDColumn" msprop:Generator_ColumnVarNameInTable="columnNetworkID" msprop:Generator_UserColumnName="NetworkID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="GenesisBlockInfo" msprop:Generator_ColumnPropNameInRow="GenesisBlockInfo" msprop:Generator_ColumnPropNameInTable="GenesisBlockInfoColumn" msprop:Generator_ColumnVarNameInTable="columnGenesisBlockInfo" msprop:Generator_UserColumnName="GenesisBlockInfo">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ConsensusAlgorithm" msprop:Generator_ColumnPropNameInRow="ConsensusAlgorithm" msprop:Generator_ColumnPropNameInTable="ConsensusAlgorithmColumn" msprop:Generator_ColumnVarNameInTable="columnConsensusAlgorithm" msprop:Generator_UserColumnName="ConsensusAlgorithm">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="BlockTime" msprop:Generator_ColumnPropNameInRow="BlockTime" msprop:Generator_ColumnPropNameInTable="BlockTimeColumn" msprop:Generator_ColumnVarNameInTable="columnBlockTime" msprop:Generator_UserColumnName="BlockTime" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Blocks" msprop:Generator_RowEvHandlerName="BlocksRowChangeEventHandler" msprop:Generator_RowDeletedName="BlocksRowDeleted" msprop:Generator_RowDeletingName="BlocksRowDeleting" msprop:Generator_RowEvArgName="BlocksRowChangeEvent" msprop:Generator_TablePropName="Blocks" msprop:Generator_RowChangedName="BlocksRowChanged" msprop:Generator_RowChangingName="BlocksRowChanging" msprop:Generator_TableClassName="BlocksDataTable" msprop:Generator_RowClassName="BlocksRow" msprop:Generator_TableVarName="tableBlocks" msprop:Generator_UserTableName="Blocks">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="BlockID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="BlockID" msprop:Generator_ColumnPropNameInTable="BlockIDColumn" msprop:Generator_ColumnVarNameInTable="columnBlockID" msprop:Generator_UserColumnName="BlockID" type="xs:int" />
              <xs:element name="Timestamp" msprop:Generator_ColumnPropNameInRow="Timestamp" msprop:Generator_ColumnPropNameInTable="TimestampColumn" msprop:Generator_ColumnVarNameInTable="columnTimestamp" msprop:Generator_UserColumnName="Timestamp" type="xs:dateTime" />
              <xs:element name="PreviousBlockHash" msprop:Generator_ColumnPropNameInRow="PreviousBlockHash" msprop:Generator_ColumnPropNameInTable="PreviousBlockHashColumn" msprop:Generator_ColumnVarNameInTable="columnPreviousBlockHash" msprop:Generator_UserColumnName="PreviousBlockHash">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="MerkleRoot" msprop:Generator_ColumnPropNameInRow="MerkleRoot" msprop:Generator_ColumnPropNameInTable="MerkleRootColumn" msprop:Generator_ColumnVarNameInTable="columnMerkleRoot" msprop:Generator_UserColumnName="MerkleRoot">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="64" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Nonce" msprop:Generator_ColumnPropNameInRow="Nonce" msprop:Generator_ColumnPropNameInTable="NonceColumn" msprop:Generator_ColumnVarNameInTable="columnNonce" msprop:Generator_UserColumnName="Nonce" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ContractExecutions" msprop:Generator_RowEvHandlerName="ContractExecutionsRowChangeEventHandler" msprop:Generator_RowDeletedName="ContractExecutionsRowDeleted" msprop:Generator_RowDeletingName="ContractExecutionsRowDeleting" msprop:Generator_RowEvArgName="ContractExecutionsRowChangeEvent" msprop:Generator_TablePropName="ContractExecutions" msprop:Generator_RowChangedName="ContractExecutionsRowChanged" msprop:Generator_RowChangingName="ContractExecutionsRowChanging" msprop:Generator_TableClassName="ContractExecutionsDataTable" msprop:Generator_RowClassName="ContractExecutionsRow" msprop:Generator_TableVarName="tableContractExecutions" msprop:Generator_UserTableName="ContractExecutions">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ContractExecutionID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ContractExecutionID" msprop:Generator_ColumnPropNameInTable="ContractExecutionIDColumn" msprop:Generator_ColumnVarNameInTable="columnContractExecutionID" msprop:Generator_UserColumnName="ContractExecutionID" type="xs:int" />
              <xs:element name="ContractID" msprop:Generator_ColumnPropNameInRow="ContractID" msprop:Generator_ColumnPropNameInTable="ContractIDColumn" msprop:Generator_ColumnVarNameInTable="columnContractID" msprop:Generator_UserColumnName="ContractID" type="xs:int" />
              <xs:element name="ExecutionTimestamp" msprop:Generator_ColumnPropNameInRow="ExecutionTimestamp" msprop:Generator_ColumnPropNameInTable="ExecutionTimestampColumn" msprop:Generator_ColumnVarNameInTable="columnExecutionTimestamp" msprop:Generator_UserColumnName="ExecutionTimestamp" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CurrentVersion" msprop:Generator_RowEvHandlerName="CurrentVersionRowChangeEventHandler" msprop:Generator_RowDeletedName="CurrentVersionRowDeleted" msprop:Generator_RowDeletingName="CurrentVersionRowDeleting" msprop:Generator_RowEvArgName="CurrentVersionRowChangeEvent" msprop:Generator_TablePropName="CurrentVersion" msprop:Generator_RowChangedName="CurrentVersionRowChanged" msprop:Generator_RowChangingName="CurrentVersionRowChanging" msprop:Generator_TableClassName="CurrentVersionDataTable" msprop:Generator_RowClassName="CurrentVersionRow" msprop:Generator_TableVarName="tableCurrentVersion" msprop:Generator_UserTableName="CurrentVersion">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="currentVersion" msprop:Generator_ColumnPropNameInRow="currentVersion" msprop:Generator_ColumnPropNameInTable="currentVersionColumn" msprop:Generator_ColumnVarNameInTable="columncurrentVersion" msprop:Generator_UserColumnName="currentVersion" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="DatabaseVersion" msprop:Generator_RowEvHandlerName="DatabaseVersionRowChangeEventHandler" msprop:Generator_RowDeletedName="DatabaseVersionRowDeleted" msprop:Generator_RowDeletingName="DatabaseVersionRowDeleting" msprop:Generator_RowEvArgName="DatabaseVersionRowChangeEvent" msprop:Generator_TablePropName="DatabaseVersion" msprop:Generator_RowChangedName="DatabaseVersionRowChanged" msprop:Generator_RowChangingName="DatabaseVersionRowChanging" msprop:Generator_TableClassName="DatabaseVersionDataTable" msprop:Generator_RowClassName="DatabaseVersionRow" msprop:Generator_TableVarName="tableDatabaseVersion" msprop:Generator_UserTableName="DatabaseVersion">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="VersionID" msprop:Generator_ColumnPropNameInRow="VersionID" msprop:Generator_ColumnPropNameInTable="VersionIDColumn" msprop:Generator_ColumnVarNameInTable="columnVersionID" msprop:Generator_UserColumnName="VersionID" type="xs:int" />
              <xs:element name="VersionNumber" msprop:Generator_ColumnPropNameInRow="VersionNumber" msprop:Generator_ColumnPropNameInTable="VersionNumberColumn" msprop:Generator_ColumnVarNameInTable="columnVersionNumber" msprop:Generator_UserColumnName="VersionNumber" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExampleTable1" msprop:Generator_RowEvHandlerName="ExampleTable1RowChangeEventHandler" msprop:Generator_RowDeletedName="ExampleTable1RowDeleted" msprop:Generator_RowDeletingName="ExampleTable1RowDeleting" msprop:Generator_RowEvArgName="ExampleTable1RowChangeEvent" msprop:Generator_TablePropName="ExampleTable1" msprop:Generator_RowChangedName="ExampleTable1RowChanged" msprop:Generator_RowChangingName="ExampleTable1RowChanging" msprop:Generator_TableClassName="ExampleTable1DataTable" msprop:Generator_RowClassName="ExampleTable1Row" msprop:Generator_TableVarName="tableExampleTable1" msprop:Generator_UserTableName="ExampleTable1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Name" msprop:Generator_ColumnPropNameInRow="Name" msprop:Generator_ColumnPropNameInTable="NameColumn" msprop:Generator_ColumnVarNameInTable="columnName" msprop:Generator_UserColumnName="Name">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_UserColumnName="Description" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExampleTable2" msprop:Generator_RowEvHandlerName="ExampleTable2RowChangeEventHandler" msprop:Generator_RowDeletedName="ExampleTable2RowDeleted" msprop:Generator_RowDeletingName="ExampleTable2RowDeleting" msprop:Generator_RowEvArgName="ExampleTable2RowChangeEvent" msprop:Generator_TablePropName="ExampleTable2" msprop:Generator_RowChangedName="ExampleTable2RowChanged" msprop:Generator_RowChangingName="ExampleTable2RowChanging" msprop:Generator_TableClassName="ExampleTable2DataTable" msprop:Generator_RowClassName="ExampleTable2Row" msprop:Generator_TableVarName="tableExampleTable2" msprop:Generator_UserTableName="ExampleTable2">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Code" msprop:Generator_ColumnPropNameInRow="Code" msprop:Generator_ColumnPropNameInTable="CodeColumn" msprop:Generator_ColumnVarNameInTable="columnCode" msprop:Generator_UserColumnName="Code">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Value" msprop:Generator_ColumnPropNameInRow="Value" msprop:Generator_ColumnPropNameInTable="ValueColumn" msprop:Generator_ColumnVarNameInTable="columnValue" msprop:Generator_UserColumnName="Value" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExampleTable4" msprop:Generator_RowEvHandlerName="ExampleTable4RowChangeEventHandler" msprop:Generator_RowDeletedName="ExampleTable4RowDeleted" msprop:Generator_RowDeletingName="ExampleTable4RowDeleting" msprop:Generator_RowEvArgName="ExampleTable4RowChangeEvent" msprop:Generator_TablePropName="ExampleTable4" msprop:Generator_RowChangedName="ExampleTable4RowChanged" msprop:Generator_RowChangingName="ExampleTable4RowChanging" msprop:Generator_TableClassName="ExampleTable4DataTable" msprop:Generator_RowClassName="ExampleTable4Row" msprop:Generator_TableVarName="tableExampleTable4" msprop:Generator_UserTableName="ExampleTable4">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="Category" msprop:Generator_ColumnPropNameInRow="Category" msprop:Generator_ColumnPropNameInTable="CategoryColumn" msprop:Generator_ColumnVarNameInTable="columnCategory" msprop:Generator_UserColumnName="Category">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Price" msprop:Generator_ColumnPropNameInRow="Price" msprop:Generator_ColumnPropNameInTable="PriceColumn" msprop:Generator_ColumnVarNameInTable="columnPrice" msprop:Generator_UserColumnName="Price" type="xs:decimal" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="ExampleTable7" msprop:Generator_RowEvHandlerName="ExampleTable7RowChangeEventHandler" msprop:Generator_RowDeletedName="ExampleTable7RowDeleted" msprop:Generator_RowDeletingName="ExampleTable7RowDeleting" msprop:Generator_RowEvArgName="ExampleTable7RowChangeEvent" msprop:Generator_TablePropName="ExampleTable7" msprop:Generator_RowChangedName="ExampleTable7RowChanged" msprop:Generator_RowChangingName="ExampleTable7RowChanging" msprop:Generator_TableClassName="ExampleTable7DataTable" msprop:Generator_RowClassName="ExampleTable7Row" msprop:Generator_TableVarName="tableExampleTable7" msprop:Generator_UserTableName="ExampleTable7">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ID" msprop:Generator_ColumnPropNameInTable="IDColumn" msprop:Generator_ColumnVarNameInTable="columnID" msprop:Generator_UserColumnName="ID" type="xs:int" />
              <xs:element name="ProductName" msprop:Generator_ColumnPropNameInRow="ProductName" msprop:Generator_ColumnPropNameInTable="ProductNameColumn" msprop:Generator_ColumnVarNameInTable="columnProductName" msprop:Generator_UserColumnName="ProductName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Quantity" msprop:Generator_ColumnPropNameInRow="Quantity" msprop:Generator_ColumnPropNameInTable="QuantityColumn" msprop:Generator_ColumnVarNameInTable="columnQuantity" msprop:Generator_UserColumnName="Quantity" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Miners" msprop:Generator_RowEvHandlerName="MinersRowChangeEventHandler" msprop:Generator_RowDeletedName="MinersRowDeleted" msprop:Generator_RowDeletingName="MinersRowDeleting" msprop:Generator_RowEvArgName="MinersRowChangeEvent" msprop:Generator_TablePropName="Miners" msprop:Generator_RowChangedName="MinersRowChanged" msprop:Generator_RowChangingName="MinersRowChanging" msprop:Generator_TableClassName="MinersDataTable" msprop:Generator_RowClassName="MinersRow" msprop:Generator_TableVarName="tableMiners" msprop:Generator_UserTableName="Miners">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="MinerID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="MinerID" msprop:Generator_ColumnPropNameInTable="MinerIDColumn" msprop:Generator_ColumnVarNameInTable="columnMinerID" msprop:Generator_UserColumnName="MinerID" type="xs:int" />
              <xs:element name="BlockID" msprop:Generator_ColumnPropNameInRow="BlockID" msprop:Generator_ColumnPropNameInTable="BlockIDColumn" msprop:Generator_ColumnVarNameInTable="columnBlockID" msprop:Generator_UserColumnName="BlockID" type="xs:int" />
              <xs:element name="RewardAmount" msprop:Generator_ColumnPropNameInRow="RewardAmount" msprop:Generator_ColumnPropNameInTable="RewardAmountColumn" msprop:Generator_ColumnVarNameInTable="columnRewardAmount" msprop:Generator_UserColumnName="RewardAmount" type="xs:decimal" />
              <xs:element name="MinerAddress" msprop:Generator_ColumnPropNameInRow="MinerAddress" msprop:Generator_ColumnPropNameInTable="MinerAddressColumn" msprop:Generator_ColumnVarNameInTable="columnMinerAddress" msprop:Generator_UserColumnName="MinerAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SchemaVersion" msprop:Generator_RowEvHandlerName="SchemaVersionRowChangeEventHandler" msprop:Generator_RowDeletedName="SchemaVersionRowDeleted" msprop:Generator_RowDeletingName="SchemaVersionRowDeleting" msprop:Generator_RowEvArgName="SchemaVersionRowChangeEvent" msprop:Generator_TablePropName="SchemaVersion" msprop:Generator_RowChangedName="SchemaVersionRowChanged" msprop:Generator_RowChangingName="SchemaVersionRowChanging" msprop:Generator_TableClassName="SchemaVersionDataTable" msprop:Generator_RowClassName="SchemaVersionRow" msprop:Generator_TableVarName="tableSchemaVersion" msprop:Generator_UserTableName="SchemaVersion">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="VersionNumber" msprop:Generator_ColumnPropNameInRow="VersionNumber" msprop:Generator_ColumnPropNameInTable="VersionNumberColumn" msprop:Generator_ColumnVarNameInTable="columnVersionNumber" msprop:Generator_UserColumnName="VersionNumber" type="xs:int" />
              <xs:element name="Description" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_UserColumnName="Description" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SecurityAccess" msprop:Generator_RowEvHandlerName="SecurityAccessRowChangeEventHandler" msprop:Generator_RowDeletedName="SecurityAccessRowDeleted" msprop:Generator_RowDeletingName="SecurityAccessRowDeleting" msprop:Generator_RowEvArgName="SecurityAccessRowChangeEvent" msprop:Generator_TablePropName="SecurityAccess" msprop:Generator_RowChangedName="SecurityAccessRowChanged" msprop:Generator_RowChangingName="SecurityAccessRowChanging" msprop:Generator_TableClassName="SecurityAccessDataTable" msprop:Generator_RowClassName="SecurityAccessRow" msprop:Generator_TableVarName="tableSecurityAccess" msprop:Generator_UserTableName="SecurityAccess">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="UserID" msprop:Generator_ColumnPropNameInTable="UserIDColumn" msprop:Generator_ColumnVarNameInTable="columnUserID" msprop:Generator_UserColumnName="UserID" type="xs:int" />
              <xs:element name="UserName" msprop:Generator_ColumnPropNameInRow="UserName" msprop:Generator_ColumnPropNameInTable="UserNameColumn" msprop:Generator_ColumnVarNameInTable="columnUserName" msprop:Generator_UserColumnName="UserName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="PasswordHash" msprop:Generator_ColumnPropNameInRow="PasswordHash" msprop:Generator_ColumnPropNameInTable="PasswordHashColumn" msprop:Generator_ColumnVarNameInTable="columnPasswordHash" msprop:Generator_UserColumnName="PasswordHash">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="UserRole" msprop:Generator_ColumnPropNameInRow="UserRole" msprop:Generator_ColumnPropNameInTable="UserRoleColumn" msprop:Generator_ColumnVarNameInTable="columnUserRole" msprop:Generator_UserColumnName="UserRole">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="SmartContracts" msprop:Generator_RowEvHandlerName="SmartContractsRowChangeEventHandler" msprop:Generator_RowDeletedName="SmartContractsRowDeleted" msprop:Generator_RowDeletingName="SmartContractsRowDeleting" msprop:Generator_RowEvArgName="SmartContractsRowChangeEvent" msprop:Generator_TablePropName="SmartContracts" msprop:Generator_RowChangedName="SmartContractsRowChanged" msprop:Generator_RowChangingName="SmartContractsRowChanging" msprop:Generator_TableClassName="SmartContractsDataTable" msprop:Generator_RowClassName="SmartContractsRow" msprop:Generator_TableVarName="tableSmartContracts" msprop:Generator_UserTableName="SmartContracts">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="ContractID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="ContractID" msprop:Generator_ColumnPropNameInTable="ContractIDColumn" msprop:Generator_ColumnVarNameInTable="columnContractID" msprop:Generator_UserColumnName="ContractID" type="xs:int" />
              <xs:element name="ContractAddress" msprop:Generator_ColumnPropNameInRow="ContractAddress" msprop:Generator_ColumnPropNameInTable="ContractAddressColumn" msprop:Generator_ColumnVarNameInTable="columnContractAddress" msprop:Generator_UserColumnName="ContractAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ContractCode" msprop:Generator_ColumnPropNameInRow="ContractCode" msprop:Generator_ColumnPropNameInTable="ContractCodeColumn" msprop:Generator_ColumnVarNameInTable="columnContractCode" msprop:Generator_UserColumnName="ContractCode">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2147483647" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ContractCreator" msprop:Generator_ColumnPropNameInRow="ContractCreator" msprop:Generator_ColumnPropNameInTable="ContractCreatorColumn" msprop:Generator_ColumnVarNameInTable="columnContractCreator" msprop:Generator_UserColumnName="ContractCreator">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ContractCreationDate" msprop:Generator_ColumnPropNameInRow="ContractCreationDate" msprop:Generator_ColumnPropNameInTable="ContractCreationDateColumn" msprop:Generator_ColumnVarNameInTable="columnContractCreationDate" msprop:Generator_UserColumnName="ContractCreationDate" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Tokens" msprop:Generator_RowEvHandlerName="TokensRowChangeEventHandler" msprop:Generator_RowDeletedName="TokensRowDeleted" msprop:Generator_RowDeletingName="TokensRowDeleting" msprop:Generator_RowEvArgName="TokensRowChangeEvent" msprop:Generator_TablePropName="Tokens" msprop:Generator_RowChangedName="TokensRowChanged" msprop:Generator_RowChangingName="TokensRowChanging" msprop:Generator_TableClassName="TokensDataTable" msprop:Generator_RowClassName="TokensRow" msprop:Generator_TableVarName="tableTokens" msprop:Generator_UserTableName="Tokens">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TokenID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="TokenID" msprop:Generator_ColumnPropNameInTable="TokenIDColumn" msprop:Generator_ColumnVarNameInTable="columnTokenID" msprop:Generator_UserColumnName="TokenID" type="xs:int" />
              <xs:element name="TokenName" msprop:Generator_ColumnPropNameInRow="TokenName" msprop:Generator_ColumnPropNameInTable="TokenNameColumn" msprop:Generator_ColumnVarNameInTable="columnTokenName" msprop:Generator_UserColumnName="TokenName">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TokenSymbol" msprop:Generator_ColumnPropNameInRow="TokenSymbol" msprop:Generator_ColumnPropNameInTable="TokenSymbolColumn" msprop:Generator_ColumnVarNameInTable="columnTokenSymbol" msprop:Generator_UserColumnName="TokenSymbol">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="TotalSupply" msprop:Generator_ColumnPropNameInRow="TotalSupply" msprop:Generator_ColumnPropNameInTable="TotalSupplyColumn" msprop:Generator_ColumnVarNameInTable="columnTotalSupply" msprop:Generator_UserColumnName="TotalSupply" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TransactionInputs" msprop:Generator_RowEvHandlerName="TransactionInputsRowChangeEventHandler" msprop:Generator_RowDeletedName="TransactionInputsRowDeleted" msprop:Generator_RowDeletingName="TransactionInputsRowDeleting" msprop:Generator_RowEvArgName="TransactionInputsRowChangeEvent" msprop:Generator_TablePropName="TransactionInputs" msprop:Generator_RowChangedName="TransactionInputsRowChanged" msprop:Generator_RowChangingName="TransactionInputsRowChanging" msprop:Generator_TableClassName="TransactionInputsDataTable" msprop:Generator_RowClassName="TransactionInputsRow" msprop:Generator_TableVarName="tableTransactionInputs" msprop:Generator_UserTableName="TransactionInputs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="InputID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="InputID" msprop:Generator_ColumnPropNameInTable="InputIDColumn" msprop:Generator_ColumnVarNameInTable="columnInputID" msprop:Generator_UserColumnName="InputID" type="xs:int" />
              <xs:element name="TransactionID" msprop:Generator_ColumnPropNameInRow="TransactionID" msprop:Generator_ColumnPropNameInTable="TransactionIDColumn" msprop:Generator_ColumnVarNameInTable="columnTransactionID" msprop:Generator_UserColumnName="TransactionID" type="xs:int" />
              <xs:element name="OutputTransactionID" msprop:Generator_ColumnPropNameInRow="OutputTransactionID" msprop:Generator_ColumnPropNameInTable="OutputTransactionIDColumn" msprop:Generator_ColumnVarNameInTable="columnOutputTransactionID" msprop:Generator_UserColumnName="OutputTransactionID" type="xs:int" />
              <xs:element name="InputAmount" msprop:Generator_ColumnPropNameInRow="InputAmount" msprop:Generator_ColumnPropNameInTable="InputAmountColumn" msprop:Generator_ColumnVarNameInTable="columnInputAmount" msprop:Generator_UserColumnName="InputAmount" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="TransactionOutputs" msprop:Generator_RowEvHandlerName="TransactionOutputsRowChangeEventHandler" msprop:Generator_RowDeletedName="TransactionOutputsRowDeleted" msprop:Generator_RowDeletingName="TransactionOutputsRowDeleting" msprop:Generator_RowEvArgName="TransactionOutputsRowChangeEvent" msprop:Generator_TablePropName="TransactionOutputs" msprop:Generator_RowChangedName="TransactionOutputsRowChanged" msprop:Generator_RowChangingName="TransactionOutputsRowChanging" msprop:Generator_TableClassName="TransactionOutputsDataTable" msprop:Generator_RowClassName="TransactionOutputsRow" msprop:Generator_TableVarName="tableTransactionOutputs" msprop:Generator_UserTableName="TransactionOutputs">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="OutputID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="OutputID" msprop:Generator_ColumnPropNameInTable="OutputIDColumn" msprop:Generator_ColumnVarNameInTable="columnOutputID" msprop:Generator_UserColumnName="OutputID" type="xs:int" />
              <xs:element name="TransactionID" msprop:Generator_ColumnPropNameInRow="TransactionID" msprop:Generator_ColumnPropNameInTable="TransactionIDColumn" msprop:Generator_ColumnVarNameInTable="columnTransactionID" msprop:Generator_UserColumnName="TransactionID" type="xs:int" />
              <xs:element name="ReceiverAccountID" msprop:Generator_ColumnPropNameInRow="ReceiverAccountID" msprop:Generator_ColumnPropNameInTable="ReceiverAccountIDColumn" msprop:Generator_ColumnVarNameInTable="columnReceiverAccountID" msprop:Generator_UserColumnName="ReceiverAccountID" type="xs:int" />
              <xs:element name="OutputAmount" msprop:Generator_ColumnPropNameInRow="OutputAmount" msprop:Generator_ColumnPropNameInTable="OutputAmountColumn" msprop:Generator_ColumnVarNameInTable="columnOutputAmount" msprop:Generator_UserColumnName="OutputAmount" type="xs:decimal" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Transactions" msprop:Generator_RowEvHandlerName="TransactionsRowChangeEventHandler" msprop:Generator_RowDeletedName="TransactionsRowDeleted" msprop:Generator_RowDeletingName="TransactionsRowDeleting" msprop:Generator_RowEvArgName="TransactionsRowChangeEvent" msprop:Generator_TablePropName="Transactions" msprop:Generator_RowChangedName="TransactionsRowChanged" msprop:Generator_RowChangingName="TransactionsRowChanging" msprop:Generator_TableClassName="TransactionsDataTable" msprop:Generator_RowClassName="TransactionsRow" msprop:Generator_TableVarName="tableTransactions" msprop:Generator_UserTableName="Transactions">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="TransactionID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="TransactionID" msprop:Generator_ColumnPropNameInTable="TransactionIDColumn" msprop:Generator_ColumnVarNameInTable="columnTransactionID" msprop:Generator_UserColumnName="TransactionID" type="xs:int" />
              <xs:element name="BlockID" msprop:Generator_ColumnPropNameInRow="BlockID" msprop:Generator_ColumnPropNameInTable="BlockIDColumn" msprop:Generator_ColumnVarNameInTable="columnBlockID" msprop:Generator_UserColumnName="BlockID" type="xs:int" />
              <xs:element name="SenderAddress" msprop:Generator_ColumnPropNameInRow="SenderAddress" msprop:Generator_ColumnPropNameInTable="SenderAddressColumn" msprop:Generator_ColumnVarNameInTable="columnSenderAddress" msprop:Generator_UserColumnName="SenderAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="ReceiverAddress" msprop:Generator_ColumnPropNameInRow="ReceiverAddress" msprop:Generator_ColumnPropNameInTable="ReceiverAddressColumn" msprop:Generator_ColumnVarNameInTable="columnReceiverAddress" msprop:Generator_UserColumnName="ReceiverAddress">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="255" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Amount" msprop:Generator_ColumnPropNameInRow="Amount" msprop:Generator_ColumnPropNameInTable="AmountColumn" msprop:Generator_ColumnVarNameInTable="columnAmount" msprop:Generator_UserColumnName="Amount" type="xs:decimal" />
              <xs:element name="TransactionTimestamp" msprop:Generator_ColumnPropNameInRow="TransactionTimestamp" msprop:Generator_ColumnPropNameInTable="TransactionTimestampColumn" msprop:Generator_ColumnVarNameInTable="columnTransactionTimestamp" msprop:Generator_UserColumnName="TransactionTimestamp" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="UserTransactions" msprop:Generator_RowEvHandlerName="UserTransactionsRowChangeEventHandler" msprop:Generator_RowDeletedName="UserTransactionsRowDeleted" msprop:Generator_RowDeletingName="UserTransactionsRowDeleting" msprop:Generator_RowEvArgName="UserTransactionsRowChangeEvent" msprop:Generator_TablePropName="UserTransactions" msprop:Generator_RowChangedName="UserTransactionsRowChanged" msprop:Generator_RowChangingName="UserTransactionsRowChanging" msprop:Generator_TableClassName="UserTransactionsDataTable" msprop:Generator_RowClassName="UserTransactionsRow" msprop:Generator_TableVarName="tableUserTransactions" msprop:Generator_UserTableName="UserTransactions">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserTransactionID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="UserTransactionID" msprop:Generator_ColumnPropNameInTable="UserTransactionIDColumn" msprop:Generator_ColumnVarNameInTable="columnUserTransactionID" msprop:Generator_UserColumnName="UserTransactionID" type="xs:int" />
              <xs:element name="AccountID" msprop:Generator_ColumnPropNameInRow="AccountID" msprop:Generator_ColumnPropNameInTable="AccountIDColumn" msprop:Generator_ColumnVarNameInTable="columnAccountID" msprop:Generator_UserColumnName="AccountID" type="xs:int" />
              <xs:element name="TransactionID" msprop:Generator_ColumnPropNameInRow="TransactionID" msprop:Generator_ColumnPropNameInTable="TransactionIDColumn" msprop:Generator_ColumnVarNameInTable="columnTransactionID" msprop:Generator_UserColumnName="TransactionID" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="VersionChanged" msprop:Generator_RowEvHandlerName="VersionChangedRowChangeEventHandler" msprop:Generator_RowDeletedName="VersionChangedRowDeleted" msprop:Generator_RowDeletingName="VersionChangedRowDeleting" msprop:Generator_RowEvArgName="VersionChangedRowChangeEvent" msprop:Generator_TablePropName="VersionChanged" msprop:Generator_RowChangedName="VersionChangedRowChanged" msprop:Generator_RowChangingName="VersionChangedRowChanging" msprop:Generator_TableClassName="VersionChangedDataTable" msprop:Generator_RowClassName="VersionChangedRow" msprop:Generator_TableVarName="tableVersionChanged" msprop:Generator_UserTableName="VersionChanged">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="currentProcedure" msprop:Generator_ColumnPropNameInRow="currentProcedure" msprop:Generator_ColumnPropNameInTable="currentProcedureColumn" msprop:Generator_ColumnVarNameInTable="columncurrentProcedure" msprop:Generator_UserColumnName="currentProcedure" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="backwardsProcedure" msprop:Generator_ColumnPropNameInRow="backwardsProcedure" msprop:Generator_ColumnPropNameInTable="backwardsProcedureColumn" msprop:Generator_ColumnVarNameInTable="columnbackwardsProcedure" msprop:Generator_UserColumnName="backwardsProcedure" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="100" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="versionTO" msprop:Generator_ColumnPropNameInRow="versionTO" msprop:Generator_ColumnPropNameInTable="versionTOColumn" msprop:Generator_ColumnVarNameInTable="columnversionTO" msprop:Generator_UserColumnName="versionTO" type="xs:int" minOccurs="0" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Accounts" />
      <xs:field xpath="mstns:AccountID" />
    </xs:unique>
    <xs:unique name="AccountSmartContract_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:AccountSmartContract" />
      <xs:field xpath="mstns:AccountID" />
      <xs:field xpath="mstns:ContractID" />
    </xs:unique>
    <xs:unique name="BlockchainMetadata_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:BlockchainMetadata" />
      <xs:field xpath="mstns:MetadataID" />
    </xs:unique>
    <xs:unique name="Blocks_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Blocks" />
      <xs:field xpath="mstns:BlockID" />
    </xs:unique>
    <xs:unique name="ContractExecutions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ContractExecutions" />
      <xs:field xpath="mstns:ContractExecutionID" />
    </xs:unique>
    <xs:unique name="DatabaseVersion_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:DatabaseVersion" />
      <xs:field xpath="mstns:VersionID" />
    </xs:unique>
    <xs:unique name="ExampleTable1_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExampleTable1" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="ExampleTable2_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExampleTable2" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="ExampleTable4_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExampleTable4" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="ExampleTable7_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:ExampleTable7" />
      <xs:field xpath="mstns:ID" />
    </xs:unique>
    <xs:unique name="Miners_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Miners" />
      <xs:field xpath="mstns:MinerID" />
    </xs:unique>
    <xs:unique name="SchemaVersion_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SchemaVersion" />
      <xs:field xpath="mstns:VersionNumber" />
    </xs:unique>
    <xs:unique name="SecurityAccess_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SecurityAccess" />
      <xs:field xpath="mstns:UserID" />
    </xs:unique>
    <xs:unique name="SmartContracts_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:SmartContracts" />
      <xs:field xpath="mstns:ContractID" />
    </xs:unique>
    <xs:unique name="Tokens_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Tokens" />
      <xs:field xpath="mstns:TokenID" />
    </xs:unique>
    <xs:unique name="TransactionInputs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TransactionInputs" />
      <xs:field xpath="mstns:InputID" />
    </xs:unique>
    <xs:unique name="TransactionOutputs_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:TransactionOutputs" />
      <xs:field xpath="mstns:OutputID" />
    </xs:unique>
    <xs:unique name="Transactions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Transactions" />
      <xs:field xpath="mstns:TransactionID" />
    </xs:unique>
    <xs:unique name="UserTransactions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:UserTransactions" />
      <xs:field xpath="mstns:UserTransactionID" />
    </xs:unique>
    <xs:unique name="VersionChanged_Constraint1" msdata:ConstraintName="Constraint1">
      <xs:selector xpath=".//mstns:VersionChanged" />
      <xs:field xpath="mstns:versionTO" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Accounts_Transactions" msdata:parent="Transactions" msdata:child="Accounts" msdata:parentkey="TransactionID" msdata:childkey="AccountID" msprop:Generator_UserParentTable="Transactions" msprop:Generator_UserChildTable="Accounts" msprop:Generator_RelationVarName="relationFK_Accounts_Transactions" msprop:Generator_UserRelationName="FK_Accounts_Transactions" msprop:Generator_ChildPropName="GetAccountsRows" msprop:Generator_ParentPropName="TransactionsRow" />
      <msdata:Relationship name="FK_Accounts_UserTransactions" msdata:parent="UserTransactions" msdata:child="Accounts" msdata:parentkey="UserTransactionID" msdata:childkey="AccountID" msprop:Generator_UserParentTable="UserTransactions" msprop:Generator_UserChildTable="Accounts" msprop:Generator_RelationVarName="relationFK_Accounts_UserTransactions" msprop:Generator_UserRelationName="FK_Accounts_UserTransactions" msprop:Generator_ChildPropName="GetAccountsRows" msprop:Generator_ParentPropName="UserTransactionsRow" />
      <msdata:Relationship name="FK_AccountSmartContract_Accounts" msdata:parent="Accounts" msdata:child="AccountSmartContract" msdata:parentkey="AccountID" msdata:childkey="AccountID" msprop:Generator_UserParentTable="Accounts" msprop:Generator_UserChildTable="AccountSmartContract" msprop:Generator_RelationVarName="relationFK_AccountSmartContract_Accounts" msprop:Generator_ChildPropName="GetAccountSmartContractRows" msprop:Generator_ParentPropName="AccountsRow" msprop:Generator_UserRelationName="FK_AccountSmartContract_Accounts" />
      <msdata:Relationship name="FK_AccountSmartContract_SmartContracts" msdata:parent="SmartContracts" msdata:child="AccountSmartContract" msdata:parentkey="ContractID" msdata:childkey="ContractID" msprop:Generator_UserParentTable="SmartContracts" msprop:Generator_UserChildTable="AccountSmartContract" msprop:Generator_RelationVarName="relationFK_AccountSmartContract_SmartContracts" msprop:Generator_UserRelationName="FK_AccountSmartContract_SmartContracts" msprop:Generator_ChildPropName="GetAccountSmartContractRows" msprop:Generator_ParentPropName="SmartContractsRow" />
      <msdata:Relationship name="FK_ContractExecutions_SmartContracts" msdata:parent="SmartContracts" msdata:child="ContractExecutions" msdata:parentkey="ContractID" msdata:childkey="ContractExecutionID" msprop:Generator_UserParentTable="SmartContracts" msprop:Generator_UserChildTable="ContractExecutions" msprop:Generator_RelationVarName="relationFK_ContractExecutions_SmartContracts" msprop:Generator_UserRelationName="FK_ContractExecutions_SmartContracts" msprop:Generator_ChildPropName="GetContractExecutionsRows" msprop:Generator_ParentPropName="SmartContractsRow" />
      <msdata:Relationship name="FK_Miners_Blocks" msdata:parent="Blocks" msdata:child="Miners" msdata:parentkey="BlockID" msdata:childkey="BlockID" msprop:Generator_UserParentTable="Blocks" msprop:Generator_UserChildTable="Miners" msprop:Generator_RelationVarName="relationFK_Miners_Blocks" msprop:Generator_ChildPropName="GetMinersRows" msprop:Generator_ParentPropName="BlocksRow" msprop:Generator_UserRelationName="FK_Miners_Blocks" />
      <msdata:Relationship name="FK_SmartContracts_UserTransactions" msdata:parent="UserTransactions" msdata:child="SmartContracts" msdata:parentkey="UserTransactionID" msdata:childkey="ContractID" msprop:Generator_UserParentTable="UserTransactions" msprop:Generator_UserChildTable="SmartContracts" msprop:Generator_RelationVarName="relationFK_SmartContracts_UserTransactions" msprop:Generator_UserRelationName="FK_SmartContracts_UserTransactions" msprop:Generator_ChildPropName="GetSmartContractsRows" msprop:Generator_ParentPropName="UserTransactionsRow" />
      <msdata:Relationship name="FK_TransactionInputs_Transactions" msdata:parent="Transactions" msdata:child="TransactionInputs" msdata:parentkey="TransactionID" msdata:childkey="TransactionID" msprop:Generator_UserParentTable="Transactions" msprop:Generator_UserChildTable="TransactionInputs" msprop:Generator_RelationVarName="relationFK_TransactionInputs_Transactions" msprop:Generator_UserRelationName="FK_TransactionInputs_Transactions" msprop:Generator_ChildPropName="GetTransactionInputsRows" msprop:Generator_ParentPropName="TransactionsRow" />
      <msdata:Relationship name="FK__Transacti__Outpu__2CF2ADDF" msdata:parent="Transactions" msdata:child="TransactionOutputs" msdata:parentkey="TransactionID" msdata:childkey="TransactionID" msprop:Generator_UserParentTable="Transactions" msprop:Generator_UserChildTable="TransactionOutputs" msprop:Generator_RelationVarName="relationFK__Transacti__Outpu__2CF2ADDF" msprop:Generator_UserRelationName="FK__Transacti__Outpu__2CF2ADDF" msprop:Generator_ChildPropName="GetTransactionOutputsRows" msprop:Generator_ParentPropName="TransactionsRow" />
      <msdata:Relationship name="FK__Transacti__Recei__2DE6D218" msdata:parent="Accounts" msdata:child="TransactionOutputs" msdata:parentkey="AccountID" msdata:childkey="ReceiverAccountID" msprop:Generator_UserParentTable="Accounts" msprop:Generator_UserChildTable="TransactionOutputs" msprop:Generator_RelationVarName="relationFK__Transacti__Recei__2DE6D218" msprop:Generator_ChildPropName="GetTransactionOutputsRows" msprop:Generator_ParentPropName="AccountsRow" msprop:Generator_UserRelationName="FK__Transacti__Recei__2DE6D218" />
      <msdata:Relationship name="FK_UserTransactions_Transactions" msdata:parent="Transactions" msdata:child="UserTransactions" msdata:parentkey="TransactionID" msdata:childkey="TransactionID" msprop:Generator_UserParentTable="Transactions" msprop:Generator_UserChildTable="UserTransactions" msprop:Generator_RelationVarName="relationFK_UserTransactions_Transactions" msprop:Generator_ChildPropName="GetUserTransactionsRows" msprop:Generator_ParentPropName="TransactionsRow" msprop:Generator_UserRelationName="FK_UserTransactions_Transactions" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>